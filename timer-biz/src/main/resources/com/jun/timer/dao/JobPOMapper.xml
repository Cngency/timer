<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jun.timer.dao.JobPOMapper">
  <resultMap id="BaseResultMap" type="com.jun.timer.dao.po.JobPO">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="appName" jdbcType="VARCHAR" property="appName" />
    <result column="jobName" jdbcType="VARCHAR" property="jobName" />
    <result column="jobOwner" jdbcType="VARCHAR" property="jobOwner" />
    <result column="className" jdbcType="VARCHAR" property="className" />
    <result column="methodName" jdbcType="VARCHAR" property="methodName" />
    <result column="params" jdbcType="VARCHAR" property="params" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="jobType" jdbcType="VARCHAR" property="jobType" />
    <result column="cron" jdbcType="VARCHAR" property="cron" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="tenantId" jdbcType="VARCHAR" property="tenantId" />
    <result column="routeStrategy" jdbcType="INTEGER" property="routeStrategy" />
    <result column="retryCount" jdbcType="INTEGER" property="retryCount" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, appName, jobName, jobOwner, className, methodName, params, status, jobType, cron, 
    createTime, description, tenantId, routeStrategy, retryCount
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Job
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Job
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jun.timer.dao.po.JobPO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into Job (Id, appName, jobName,
      jobOwner, className, methodName, 
      params, status, jobType, 
      cron, createTime, description, 
      tenantId, routeStrategy, retryCount
      )
    values (#{id,jdbcType=INTEGER}, #{appName,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR}, 
      #{jobOwner,jdbcType=VARCHAR}, #{className,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}, 
      #{params,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{jobType,jdbcType=VARCHAR}, 
      #{cron,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=VARCHAR}, #{routeStrategy,jdbcType=INTEGER}, #{retryCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jun.timer.dao.po.JobPO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into Job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="appName != null">
        appName,
      </if>
      <if test="jobName != null">
        jobName,
      </if>
      <if test="jobOwner != null">
        jobOwner,
      </if>
      <if test="className != null">
        className,
      </if>
      <if test="methodName != null">
        methodName,
      </if>
      <if test="params != null">
        params,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="jobType != null">
        jobType,
      </if>
      <if test="cron != null">
        cron,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="tenantId != null">
        tenantId,
      </if>
      <if test="routeStrategy != null">
        routeStrategy,
      </if>
      <if test="retryCount != null">
        retryCount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="appName != null">
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobOwner != null">
        #{jobOwner,jdbcType=VARCHAR},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="jobType != null">
        #{jobType,jdbcType=VARCHAR},
      </if>
      <if test="cron != null">
        #{cron,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="routeStrategy != null">
        #{routeStrategy,jdbcType=INTEGER},
      </if>
      <if test="retryCount != null">
        #{retryCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jun.timer.dao.po.JobPO">
    update Job
    <set>
      <if test="appName != null">
        appName = #{appName,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null">
        jobName = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobOwner != null">
        jobOwner = #{jobOwner,jdbcType=VARCHAR},
      </if>
      <if test="className != null">
        className = #{className,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        methodName = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="jobType != null">
        jobType = #{jobType,jdbcType=VARCHAR},
      </if>
      <if test="cron != null">
        cron = #{cron,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenantId = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="routeStrategy != null">
        routeStrategy = #{routeStrategy,jdbcType=INTEGER},
      </if>
      <if test="retryCount != null">
        retryCount = #{retryCount,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jun.timer.dao.po.JobPO">
    update Job
    set appName = #{appName,jdbcType=VARCHAR},
      jobName = #{jobName,jdbcType=VARCHAR},
      jobOwner = #{jobOwner,jdbcType=VARCHAR},
      className = #{className,jdbcType=VARCHAR},
      methodName = #{methodName,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      jobType = #{jobType,jdbcType=VARCHAR},
      cron = #{cron,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      tenantId = #{tenantId,jdbcType=VARCHAR},
      routeStrategy = #{routeStrategy,jdbcType=INTEGER},
      retryCount = #{retryCount,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByJobAndApp" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from Job
    where jobName = #{jobName,jdbcType=VARCHAR}
    AND appName = #{appName,jdbcType=VARCHAR}
  </select>
  <select id="selectJobList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from Job where tenantId = #{tenantId,jdbcType=VARCHAR} ORDER BY createTime DESC
  </select>

 <!-- <select id="selectJobList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from Job where tenantId = #{tenantId,jdbcType=VARCHAR} /*AND (jobType = 0 OR (jobOwner = #{jobOwner,jdbcType=VARCHAR}))*/ ORDER BY createTime DESC
  </select>
-->

  <select id="selectJobListByAppName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from Job
    WHERE appName=#{appName,jdbcType=INTEGER} AND status = 1
  </select>

  <select id="selectJobNameByJobOwner" resultType="java.lang.String">
    select
    jobName
    from Job where tenantId = #{tenantId,jdbcType=VARCHAR} AND jobOwner = #{jobOwner,jdbcType=VARCHAR}
  </select>

  <update id="updateStatus">
    update Job
    set status = #{status,jdbcType=BIT}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>